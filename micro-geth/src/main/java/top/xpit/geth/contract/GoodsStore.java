package top.xpit.geth.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class GoodsStore extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b506117e5806100206000396000f3fe608060405260043610620000865760003560e01c8063b90190661162000055578063b90190661462000185578063c6dfb2ef14620001c9578063c93b019014620001e9578063e2e0745814620002175762000086565b806305d63070146200008b57806364c0187914620000cf57806377139b021462000113578063850a05571462000141575b600080fd5b3480156200009857600080fd5b50620000b76004803603810190620000b191906200080c565b6200025b565b604051620000c6919062000960565b60405180910390f35b348015620000dc57600080fd5b50620000fb6004803603810190620000f591906200080c565b620002af565b6040516200010a919062000943565b60405180910390f35b3480156200012057600080fd5b506200013f600480360381019062000139919062000870565b6200036f565b005b3480156200014e57600080fd5b506200016d60048036038101906200016791906200080c565b62000486565b6040516200017c919062000960565b60405180910390f35b3480156200019257600080fd5b50620001b16004803603810190620001ab91906200080c565b62000544565b604051620001c0919062000926565b60405180910390f35b620001e76004803603810190620001e191906200080c565b62000581565b005b348015620001f657600080fd5b506200021560048036038101906200020f91906200080c565b6200061a565b005b3480156200022457600080fd5b506200024360048036038101906200023d91906200080c565b620006b2565b60405162000252919062000960565b60405180910390f35b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200032d57600080fd5b505af115801562000342573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003689190620007da565b9050919050565b816001819055508360028190555082600481905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060025460015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686604051620003fc9062000770565b6200040b94939291906200097d565b604051809103906000f08015801562000428573d6000803e3d6000fd5b5090508060036000600454815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634bfca7686040518163ffffffff1660e01b815260040160206040518083038186803b1580156200050257600080fd5b505afa15801562000517573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200053d91906200083e565b9050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631998aeef346040518263ffffffff1660e01b81526004016000604051808303818588803b158015620005fd57600080fd5b505af115801562000612573d6000803e3d6000fd5b505050505050565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a24f46c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200069657600080fd5b505af1158015620006ab573d6000803e3d6000fd5b5050505050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663787c0a6c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200072e57600080fd5b505afa15801562000743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200076991906200083e565b9050919050565b610d348062000a7c83390190565b6000813590506200078f8162000a2d565b92915050565b600081519050620007a68162000a47565b92915050565b600081359050620007bd8162000a61565b92915050565b600081519050620007d48162000a61565b92915050565b600060208284031215620007f357620007f262000a28565b5b6000620008038482850162000795565b91505092915050565b60006020828403121562000825576200082462000a28565b5b60006200083584828501620007ac565b91505092915050565b60006020828403121562000857576200085662000a28565b5b60006200086784828501620007c3565b91505092915050565b600080600080608085870312156200088d576200088c62000a28565b5b60006200089d87828801620007ac565b9450506020620008b087828801620007ac565b9350506040620008c387828801620007ac565b9250506060620008d6878288016200077e565b91505092959194509250565b620008ed81620009de565b82525050565b620008fe81620009ca565b82525050565b6200090f81620009f2565b82525050565b620009208162000a1e565b82525050565b60006020820190506200093d6000830184620008f3565b92915050565b60006020820190506200095a600083018462000904565b92915050565b600060208201905062000977600083018462000915565b92915050565b600060808201905062000994600083018762000915565b620009a3602083018662000915565b620009b26040830185620008e2565b620009c1606083018462000915565b95945050505050565b6000620009d782620009fe565b9050919050565b6000620009eb82620009fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b62000a3881620009de565b811462000a4457600080fd5b50565b62000a5281620009f2565b811462000a5e57600080fd5b50565b62000a6c8162000a1e565b811462000a7857600080fd5b5056fe60806040523480156200001157600080fd5b5060405162000d3438038062000d348339818101604052810190620000379190620000ca565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082846200008591906200013c565b60018190555080600681905550505050506200023f565b600081519050620000ad816200020b565b92915050565b600081519050620000c48162000225565b92915050565b60008060008060808587031215620000e757620000e662000206565b5b6000620000f787828801620000b3565b94505060206200010a87828801620000b3565b93505060406200011d878288016200009c565b92505060606200013087828801620000b3565b91505092959194509250565b60006200014982620001cd565b91506200015683620001cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200018e576200018d620001d7565b5b828201905092915050565b6000620001a682620001ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b620002168162000199565b81146200022257600080fd5b50565b6200023081620001cd565b81146200023c57600080fd5b50565b610ae5806200024f6000396000f3fe60806040526004361061004a5760003560e01c80631998aeef1461004f5780632a24f46c146100595780633ccfd60b146100705780634bfca7681461009b578063787c0a6c146100c6575b600080fd5b6100576100f1565b005b34801561006557600080fd5b5061006e610282565b005b34801561007c57600080fd5b506100856105c9565b604051610092919061081b565b60405180910390f35b3480156100a757600080fd5b506100b06106ed565b6040516100bd91906108b6565b60405180910390f35b3480156100d257600080fd5b506100db6106f7565b6040516100e891906108b6565b60405180910390f35b600154421115610136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012d90610836565b60405180910390fd5b600354341161017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017190610856565b60405180910390fd5b6000600354146101ff5760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f791906108e2565b925050819055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346003819055507ff4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad30033346040516102789291906107f2565b60405180910390a1565b6001544210156102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be90610876565b60405180910390fd5b600560009054906101000a900460ff1615610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610896565b60405180910390fd5b6001600560006101000a81548160ff0219169083151502179055507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040516103879291906107f2565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156103f7573d6000803e3d6000fd5b50600060046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156105c7577fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda3060046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516104f49291906107c9565b60405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156105c5573d6000803e3d6000fd5b505b565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156106e4576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050506106e35780600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009150506106ea565b5b60019150505b90565b6000600654905090565b6000600154905090565b61070a81610980565b82525050565b61071981610938565b82525050565b6107288161094a565b82525050565b600061073b6016836108d1565b9150610746826109e5565b602082019050919050565b600061075e601e836108d1565b915061076982610a0e565b602082019050919050565b60006107816016836108d1565b915061078c82610a37565b602082019050919050565b60006107a46023836108d1565b91506107af82610a60565b604082019050919050565b6107c381610976565b82525050565b60006040820190506107de6000830185610701565b6107eb60208301846107ba565b9392505050565b60006040820190506108076000830185610710565b61081460208301846107ba565b9392505050565b6000602082019050610830600083018461071f565b92915050565b6000602082019050818103600083015261084f8161072e565b9050919050565b6000602082019050818103600083015261086f81610751565b9050919050565b6000602082019050818103600083015261088f81610774565b9050919050565b600060208201905081810360008301526108af81610797565b9050919050565b60006020820190506108cb60008301846107ba565b92915050565b600082825260208201905092915050565b60006108ed82610976565b91506108f883610976565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561092d5761092c6109b6565b5b828201905092915050565b600061094382610956565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061098b82610992565b9050919050565b600061099d826109a4565b9050919050565b60006109af82610956565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f41756374696f6e20616c726561647920656e6465642e00000000000000000000600082015250565b7f546865726520616c7265616479206973206120686967686572206269642e0000600082015250565b7f41756374696f6e206e6f742079657420656e6465642e00000000000000000000600082015250565b7f61756374696f6e456e642068617320616c7265616479206265656e2063616c6c60008201527f65642e000000000000000000000000000000000000000000000000000000000060208201525056fea26469706673582212204d07db6e2eeafa6ccf2f6c2f06f635a7823700b22675677da1eb0a31091f1a6164736f6c63430008070033a26469706673582212209d8853c6dd88fd34f0652b92c3a8cfb76fe541c65c830cc671693d3c0131ba1064736f6c63430008070033";

    public static final String FUNC_CREATEGOODS = "createGoods";

    public static final String FUNC_ESCROWADDRESS = "escrowAddress";

    public static final String FUNC_ESCROWAUCTIONEND = "escrowAuctionEnd";

    public static final String FUNC_ESCROWAUCTIONENDTIME = "escrowAuctionEndTime";

    public static final String FUNC_ESCROWBID = "escrowBid";

    public static final String FUNC_ESCROWGOODSID = "escrowGoodsId";

    public static final String FUNC_ESCROWWITHDRAW = "escrowWithdraw";

    public static final String FUNC_GETCONTRACTBALANCE = "getContractBalance";

    @Deprecated
    protected GoodsStore(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected GoodsStore(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected GoodsStore(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected GoodsStore(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> createGoods(BigInteger _startTime, BigInteger _goodsId, BigInteger _biddingTime, String _beneficiary) {
        final Function function = new Function(
                FUNC_CREATEGOODS, 
                Arrays.<Type>asList(new Uint256(_startTime),
                new Uint256(_goodsId),
                new Uint256(_biddingTime),
                new Address(160, _beneficiary)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> escrowAddress(BigInteger _goodsId) {
        final Function function = new Function(FUNC_ESCROWADDRESS, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> escrowAuctionEnd(BigInteger _goodsId) {
        final Function function = new Function(
                FUNC_ESCROWAUCTIONEND, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> escrowAuctionEndTime(BigInteger _goodsId) {
        final Function function = new Function(FUNC_ESCROWAUCTIONENDTIME, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> escrowBid(BigInteger _goodsId, BigInteger amount) {
        final Function function = new Function(
                FUNC_ESCROWBID, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, amount);
    }

    public RemoteFunctionCall<BigInteger> escrowGoodsId(BigInteger _goodsId) {
        final Function function = new Function(FUNC_ESCROWGOODSID, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> escrowWithdraw(BigInteger _goodsId) {
        final Function function = new Function(
                FUNC_ESCROWWITHDRAW, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getContractBalance(BigInteger _goodsId) {
        final Function function = new Function(FUNC_GETCONTRACTBALANCE, 
                Arrays.<Type>asList(new Uint256(_goodsId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static GoodsStore load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new GoodsStore(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static GoodsStore load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new GoodsStore(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static GoodsStore load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new GoodsStore(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static GoodsStore load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new GoodsStore(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<GoodsStore> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(GoodsStore.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<GoodsStore> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(GoodsStore.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<GoodsStore> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(GoodsStore.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<GoodsStore> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(GoodsStore.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
