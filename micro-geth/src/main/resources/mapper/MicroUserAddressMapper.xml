<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.xpit.geth.mapper.MicroUserAddressMapper">

    <resultMap type="MicroUserAddress" id="MicroUserAddressResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="name"    column="name"    />
        <result property="phone"    column="phone"    />
        <result property="address"    column="address"    />
        <result property="isDefault"    column="is_default"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectMicroUserAddressVo">
        select id, user_id, name, phone, address, is_default, create_time, create_by, update_time, update_by, del_flag from micro_user_address
    </sql>

    <select id="selectMicroUserAddressList" parameterType="MicroUserAddress" resultMap="MicroUserAddressResult">
        <include refid="selectMicroUserAddressVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="isDefault != null "> and is_default = #{isDefault}</if>
        </where>
    </select>

    <select id="selectMicroUserAddressById" parameterType="Long" resultMap="MicroUserAddressResult">
        <include refid="selectMicroUserAddressVo"/>
        where id = #{id}
    </select>
    <select id="selectByUserIdAndDefault" parameterType="Long" resultType="top.xpit.geth.domain.MicroUserAddress">
        <include refid="selectMicroUserAddressVo"/>
        where user_id = #{userId} and is_default = '1'
    </select>

    <insert id="insertMicroUserAddress" parameterType="MicroUserAddress" useGeneratedKeys="true" keyProperty="id">
        insert into micro_user_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="name != null">name,</if>
            <if test="phone != null">phone,</if>
            <if test="address != null">address,</if>
            <if test="isDefault != null">is_default,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="delFlag != null">del_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="name != null">#{name},</if>
            <if test="phone != null">#{phone},</if>
            <if test="address != null">#{address},</if>
            <if test="isDefault != null">#{isDefault},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="delFlag != null">#{delFlag},</if>
        </trim>
    </insert>

    <update id="updateMicroUserAddress" parameterType="MicroUserAddress">
        update micro_user_address
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="address != null">address = #{address},</if>
            <if test="isDefault != null">is_default = #{isDefault},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMicroUserAddressById" parameterType="Long">
        delete from micro_user_address where id = #{id}
    </delete>

    <delete id="deleteMicroUserAddressByIds" parameterType="String">
        delete from micro_user_address where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>